
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION CADENA DIFERENTE DIVISION DOS_PUNTOS IDENTIFICADOR IGUALDAD IMPRIMIR LLAVE_DERECHA LLAVE_IZQUIERDA MAS MENOS MULTIPLICACION NUMERO PARENTESIS_DERECHO PARENTESIS_IZQUIERDO PORCENTAJE PUNTO_Y_COMA SI SINOprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : expression PUNTO_Y_COMA\n                 | SI PARENTESIS_IZQUIERDO expression PARENTESIS_DERECHO DOS_PUNTOS statement_list\n                 | SI PARENTESIS_IZQUIERDO expression PARENTESIS_DERECHO DOS_PUNTOS statement_list SINO DOS_PUNTOS statement_list\n                 | IMPRIMIR PARENTESIS_IZQUIERDO CADENA PARENTESIS_DERECHO PUNTO_Y_COMAexpression : term\n                  | expression MAS term\n                  | expression MENOS term\n                  | expression PORCENTAJE term\n                  | expression IGUALDAD term\n                  | expression DIFERENTE termterm : IDENTIFICADOR\n            | NUMERO'
    
_lr_action_items = {'SI':([0,2,3,10,11,28,29,30,32,33,],[5,5,-2,-3,-4,5,-7,5,5,5,]),'IMPRIMIR':([0,2,3,10,11,28,29,30,32,33,],[6,6,-2,-3,-4,6,-7,6,6,6,]),'IDENTIFICADOR':([0,2,3,10,11,12,13,14,15,16,17,28,29,30,32,33,],[8,8,-2,-3,-4,8,8,8,8,8,8,8,-7,8,8,8,]),'NUMERO':([0,2,3,10,11,12,13,14,15,16,17,28,29,30,32,33,],[9,9,-2,-3,-4,9,9,9,9,9,9,9,-7,9,9,9,]),'$end':([1,2,3,10,11,29,30,33,],[0,-1,-2,-3,-4,-7,-5,-6,]),'SINO':([3,10,11,29,30,33,],[-2,-3,-4,-7,31,-6,]),'PUNTO_Y_COMA':([4,7,8,9,19,20,21,22,23,27,],[11,-8,-14,-15,-9,-10,-11,-12,-13,29,]),'MAS':([4,7,8,9,19,20,21,22,23,24,],[12,-8,-14,-15,-9,-10,-11,-12,-13,12,]),'MENOS':([4,7,8,9,19,20,21,22,23,24,],[13,-8,-14,-15,-9,-10,-11,-12,-13,13,]),'PORCENTAJE':([4,7,8,9,19,20,21,22,23,24,],[14,-8,-14,-15,-9,-10,-11,-12,-13,14,]),'IGUALDAD':([4,7,8,9,19,20,21,22,23,24,],[15,-8,-14,-15,-9,-10,-11,-12,-13,15,]),'DIFERENTE':([4,7,8,9,19,20,21,22,23,24,],[16,-8,-14,-15,-9,-10,-11,-12,-13,16,]),'PARENTESIS_IZQUIERDO':([5,6,],[17,18,]),'PARENTESIS_DERECHO':([7,8,9,19,20,21,22,23,24,25,],[-8,-14,-15,-9,-10,-11,-12,-13,26,27,]),'CADENA':([18,],[25,]),'DOS_PUNTOS':([26,31,],[28,32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,28,32,],[2,30,33,]),'statement':([0,2,28,30,32,33,],[3,10,3,10,3,10,]),'expression':([0,2,17,28,30,32,33,],[4,4,24,4,4,4,4,]),'term':([0,2,12,13,14,15,16,17,28,30,32,33,],[7,7,19,20,21,22,23,7,7,7,7,7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','lexer.py',115),
  ('statement_list -> statement','statement_list',1,'p_statement_list','lexer.py',120),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','lexer.py',121),
  ('statement -> expression PUNTO_Y_COMA','statement',2,'p_statement','lexer.py',129),
  ('statement -> SI PARENTESIS_IZQUIERDO expression PARENTESIS_DERECHO DOS_PUNTOS statement_list','statement',6,'p_statement','lexer.py',130),
  ('statement -> SI PARENTESIS_IZQUIERDO expression PARENTESIS_DERECHO DOS_PUNTOS statement_list SINO DOS_PUNTOS statement_list','statement',9,'p_statement','lexer.py',131),
  ('statement -> IMPRIMIR PARENTESIS_IZQUIERDO CADENA PARENTESIS_DERECHO PUNTO_Y_COMA','statement',5,'p_statement','lexer.py',132),
  ('expression -> term','expression',1,'p_expression','lexer.py',145),
  ('expression -> expression MAS term','expression',3,'p_expression','lexer.py',146),
  ('expression -> expression MENOS term','expression',3,'p_expression','lexer.py',147),
  ('expression -> expression PORCENTAJE term','expression',3,'p_expression','lexer.py',148),
  ('expression -> expression IGUALDAD term','expression',3,'p_expression','lexer.py',149),
  ('expression -> expression DIFERENTE term','expression',3,'p_expression','lexer.py',150),
  ('term -> IDENTIFICADOR','term',1,'p_term','lexer.py',158),
  ('term -> NUMERO','term',1,'p_term','lexer.py',159),
]
